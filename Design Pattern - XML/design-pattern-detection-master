<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Factory Method" />
	<pattern name="Prototype" />
	<pattern name="Singleton" />
	<pattern name="(Object)Adapter" />
	<pattern name="Command" />
	<pattern name="Composite" />
	<pattern name="Decorator" />
	<pattern name="Observer">
		<instance>
			<role name="Observer" element="observer.Observer" />
			<role name="Subject" element="observer.StockGrabber" />
			<role name="Notify()" element="observer.StockGrabber::notifyObserver():void" />
		</instance>
	</pattern>
	<pattern name="State" />
	<pattern name="Strategy" />
	<pattern name="Bridge" />
	<pattern name="Template Method" />
	<pattern name="Visitor">
		<instance>
			<role name="ConcreteElement" element="visitor.Bicycle" />
			<role name="Visitor" element="visitor.Visitor" />
			<role name="Accept()" element="visitor.Bicycle::accept(visitor.Visitor):void" />
		</instance>
		<instance>
			<role name="ConcreteElement" element="visitor.Bread" />
			<role name="Visitor" element="visitor.Visitor" />
			<role name="Accept()" element="visitor.Bread::accept(visitor.Visitor):void" />
		</instance>
		<instance>
			<role name="ConcreteElement" element="visitor.FinalAcceptor" />
			<role name="Visitor" element="visitor.Visitor" />
			<role name="Accept()" element="visitor.FinalAcceptor::accept(visitor.Visitor):void" />
		</instance>
		<instance>
			<role name="ConcreteElement" element="visitor.Light" />
			<role name="Visitor" element="visitor.Visitor" />
			<role name="Accept()" element="visitor.Light::accept(visitor.Visitor):void" />
		</instance>
	</pattern>
	<pattern name="Proxy" />
	<pattern name="Proxy2" />
	<pattern name="Chain of Responsibility" />
</system>

